package com.agent.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.hateoas.EntityModel;
import org.springframework.hateoas.server.mvc.WebMvcLinkBuilder;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.agent.entity.Agent;
import com.agent.exception.ResourceNotFoundException;
import com.agent.repo.AgentRepo;

@org.springframework.stereotype.Controller
@RequestMapping("/agentApi")
public class Controller {
	@Autowired
	AgentRepo agentRepo;
	
	@GetMapping("/allAgents")
    public List<Agent> getAllAgents() {
        return agentRepo.findAll();
    }
	
	@Autowired
	private RestTemplate restTemplate;
	
    @GetMapping("/agents/{id}")
    public ResponseEntity<Agent> getAgentById(@PathVariable(value = "id") int agentId)
        throws ResourceNotFoundException {
        Agent agent = agentRepo.findById(agentId)
          .orElseThrow(() -> new ResourceNotFoundException("Agent not found for this id :: " + agentId));
        List clients=this.restTemplate.getForObject("http://Client-Details/clientApi/agent/"+agent.getAgentid(), List.class);
        agent.setClients(clients);
        List transactions=this.restTemplate.getForObject("http://Transaction-Details/transactionApi/agent/"+agent.getAgentid(), List.class);
        agent.setTransactions(transactions);
        return ResponseEntity.ok().body(agent);
    }
    
    

}